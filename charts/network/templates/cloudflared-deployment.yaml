apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
  namespace: {{ .Release.Namespace }}
  labels:
    app: cloudflared
spec:
  replicas: {{ index .Values "cloudflare-tunnel" "replicaCount" }}
  selector:
    matchLabels:
      app: cloudflared
  template:
    metadata:
      labels:
        app: cloudflared
    spec:
      {{- if (index .Values "cloudflare-tunnel" "securityContext" "enablePing") }}
      securityContext:
        sysctls:
          - name: net.ipv4.ping_group_range
            value: {{ index .Values "cloudflare-tunnel" "securityContext" "pingGroupRange" | quote }}
      {{- end }}
      containers:
        - name: cloudflared
          image: {{ index .Values "cloudflare-tunnel" "image" "repository" }}:{{ index .Values "cloudflare-tunnel" "image" "tag" }}
          imagePullPolicy: {{ index .Values "cloudflare-tunnel" "image" "pullPolicy" }}
          env:
            - name: TUNNEL_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ index .Values "cloudflare-tunnel" "secret" "name" }}
                  key: {{ index .Values "cloudflare-tunnel" "secret" "key" }}
          command:
            - cloudflared
            - tunnel
            - --no-autoupdate
            - --loglevel
            - {{ index .Values "cloudflare-tunnel" "logLevel" }}
            - --metrics
            - {{ index .Values "cloudflare-tunnel" "metrics" "address" }}:{{ index .Values "cloudflare-tunnel" "metrics" "port" }}
            - run
          livenessProbe:
            httpGet:
              path: {{ index .Values "cloudflare-tunnel" "livenessProbe" "path" }}
              port: {{ index .Values "cloudflare-tunnel" "metrics" "port" }}
            failureThreshold: {{ index .Values "cloudflare-tunnel" "livenessProbe" "failureThreshold" }}
            initialDelaySeconds: {{ index .Values "cloudflare-tunnel" "livenessProbe" "initialDelaySeconds" }}
            periodSeconds: {{ index .Values "cloudflare-tunnel" "livenessProbe" "periodSeconds" }}
